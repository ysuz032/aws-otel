#!/bin/bash
# export temporary credential from sso session

# Require jq
if ! command -v jq > /dev/null ; then
  echo "jq command is required." 1>&2
  exit 1
fi

# Check that the environment variable `AWS_PROFILE` is set
if [ -z "${AWS_PROFILE:+UNDEF}" ]; then
  echo "AWS_PROFILE environment variable must be defined." 1>&2
  exit 1
fi

# Get SSO settings
SSO_ACCOUNT_ID=$(aws configure get sso_account_id --profile ${AWS_PROFILE})
SSO_ROLE_NAME=$(aws configure get sso_role_name --profile ${AWS_PROFILE})
SSO_REGION=$(aws configure get region --profile ${AWS_PROFILE})

# Set SSO_ACCESS_TOKEN from ~/.aws/sso/cache/**/botocore*.json
SSO_ACCESS_TOKEN=
for file in $(find ~/.aws/sso/cache -type f ! -name "botocore*.json"); do
  RESULT=$(cat "${file}" | jq -r '.accessToken | select (. != null)')
  if [ ! -z "${RESULT}" ]; then
    SSO_ACCESS_TOKEN=${RESULT}
    break
  fi
done

# Guard
if [ -z "${SSO_ACCOUNT_ID}" ]; then
  echo "Invalid SSO_ACCOUNT_ID" 1>&2
  exit 1
fi

if [ -z "${SSO_ROLE_NAME}" ]; then
  echo "Invalid SSO_ROLE_NAME" 1>&2
  exit 1
fi

if [ -z "${SSO_REGION}" ]; then
  echo "Invalid SSO_REGION" 1>&2
  exit 1
fi

if [ -z "${SSO_ACCESS_TOKEN}" ]; then
  echo "Invalid SSO_ACCESS_TOKEN" 1>&2
  exit 1
fi

# Get credentials
CREDENTIALS=$(aws sso get-role-credentials \
  --account-id "${SSO_ACCOUNT_ID}" \
  --role-name "${SSO_ROLE_NAME}" \
  --region "${SSO_REGION}" \
  --access-token "${SSO_ACCESS_TOKEN}" \
  --profile "${AWS_PROFILE}"
  )

# set variables
AWS_ACCESS_KEY_ID=$(echo "${CREDENTIALS}" | jq -r '.roleCredentials.accessKeyId')
AWS_SECRET_ACCESS_KEY=$(echo "${CREDENTIALS}" | jq -r '.roleCredentials.secretAccessKey')
AWS_SESSION_TOKEN=$(echo "${CREDENTIALS}" | jq -r '.roleCredentials.sessionToken')

# export
export AWS_ACCESS_KEY_ID
export AWS_SECRET_ACCESS_KEY
export AWS_SESSION_TOKEN

echo "Finished successfully."